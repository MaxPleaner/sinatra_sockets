coffee:

  # Since the Youtube iFrame API is loaded asynchronously,
  # all dependent code must be run through this callback:
  Mixer.init_add_video = (callback) ->
    window.onYouTubeIframeAPIReady = -> callback()
    Mixer.$videos = $("#videos")
    Mixer.$first_script = document.getElementsByTagName("script")[0]
    tag = document.createElement "script"
    tag.src = "http://www.youtube.com/iframe_api"
    Mixer.$first_script.parentNode.insertBefore(tag, Mixer.$first_script)  

  Mixer.add_video = (id) ->
    embed_code = "
      <div class='video'>
        <button class='close-button'>X</button>
        <b>#{id}</b>
        <div class='iframe-target'></div>
      </div>
    "
    $video = $ embed_code
    Mixer.$videos.append($video)
    Mixer.add_close_video_event($video)
    Mixer.create_video_player(id, $video)
  
  # Namespaced on window.
  # Callback of the Youtube API, loaded through iFrame
  Mixer.create_video_player = (videoId, $video) ->
    player = new YT.Player $video[0],
      height: 400
      width: 640
      videoId: videoId
      events:
        onReady: Mixer.onPlayerReady
        onStateChange: Mixer.onPlayerStateChange


  Mixer.onPlayerReady = (event) ->
    event.target.playVideo 

  Mixer.onPlayerStateChange = (event) ->
    if (event.data == TY.PlayerState.PLAYING)
      setTimeout Mixer.stopVideo, 1000

  Mixer.stopVideo = ->
    player.stopVideo

  Mixer.add_close_video_event = ($video) ->
    $close = $video.find(".close-button")
    $close.on "click", (e) ->
      $(e.currentTarget).parent(".video").remove()